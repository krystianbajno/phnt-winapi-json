name: prep_and_release

on:
  # schedule:
  #   - cron: "0 0 * * *"
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  prepare_and_release:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Prepare ENV vars
      run: echo "RELEASE=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

    - name: Build the project
      run: cargo build --release
 
    - name: Generate the output
      run: cargo run --release

    - name: Download latest release output.json
      run: curl -L -o latest_output.json https://github.com/krystianbajno/undocumented-winapi-json/releases/latest/download/output.json

    - name: Calculate MD5 of generated output.json
      id: md5_local
      run: echo "$(md5sum output.json | cut -d ' ' -f 1)" > local_md5.txt

    - name: Calculate MD5 of latest release output.json
      id: md5_remote
      run: echo "$(md5sum latest_output.json | cut -d ' ' -f 1)" > remote_md5.txt

    - name: Compare MD5 hashes
      id: check_md5
      run: |
        local_md5=$(cat local_md5.txt)
        remote_md5=$(cat remote_md5.txt)
        echo "Local MD5: $local_md5"
        echo "Remote MD5: $remote_md5"
        if [ "$local_md5" == "$remote_md5" ]; then
          echo "MD5 matches. Skipping release creation."
          exit 0
        else
          echo "MD5 does not match. Proceeding with release."
        fi

    - name: Create new release
      if: steps.check_md5.outcome == 'success'
      uses: actions/create-release@v1
      id: create_release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.RELEASE }}
        release_name: Release ${{ env.RELEASE }}

    - name: Upload JSON output file to the release
      if: steps.check_md5.outcome == 'success'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./output.json
        asset_name: output.json
        asset_content_type: application/json
